unit Bitmaps;

interface
uses Graph;

type JedenObraz = array [0..65000] of byte;
     PObrazok    = ^JedenObraz;

{9x9}
const Aphex : array[0..80] of byte = (
              0,0,0,0,0,1,1,1,1,
              0,0,0,0,0,0,1,1,1,
              1,1,0,0,0,0,0,1,1,
              1,1,0,1,0,0,0,1,1,
              1,0,0,0,1,0,0,0,1,
              1,0,0,0,1,1,0,0,1,
              0,0,1,1,1,1,1,0,0,
              0,0,1,1,1,1,1,0,0,
              0,1,1,1,1,1,1,1,0);
{11x11}
const UpButt : array[0..120] of byte = (
               1,1,1,1,1,0,1,1,1,1,1,
               1,1,1,1,8,15,0,1,1,1,1,
               1,1,1,8,15,15,15,0,1,1,1,
               1,1,8,15,15,15,15,15,0,1,1,
               1,8,15,15,15,15,15,15,15,0,1,
               8,8,8,8,15,15,15,8,8,8,8,
               1,1,1,8,15,15,15,0,1,1,1,
               1,1,1,8,15,15,15,0,1,1,1,
               1,1,1,8,15,15,15,0,1,1,1,
               1,1,1,8,8,8,8,8,1,1,1,
               1,1,1,1,1,1,1,1,1,1,1);

const DownButt : array[0..120] of byte = (
               1,1,1,1,1,1,1,1,1,1,1,
               1,1,1,8,8,8,8,8,1,1,1,
               1,1,1,8,15,15,15,0,1,1,1,
               1,1,1,8,15,15,15,0,1,1,1,
               1,1,1,8,15,15,15,0,1,1,1,
               8,8,8,8,15,15,15,8,8,8,8,
               1,8,15,15,15,15,15,15,15,0,1,
               1,1,8,15,15,15,15,15,0,1,1,
               1,1,1,8,15,15,15,0,1,1,1,
               1,1,1,1,8,15,0,1,1,1,1,
               1,1,1,1,1,0,1,1,1,1,1);

const LeftButt : array[0..120] of byte = (
                  1,1,1,1,1,8,1,1,1,1,1,
                  1,1,1,1,8,8,1,1,1,1,1,
                  1,1,1,8,15,8,1,1,1,1,1,
                  1,1,8,15,15,8,8,8,8,8,1,
                  1,8,15,15,15,15,15,15,15,8,1,
                  0,15,15,15,15,15,15,15,15,8,1,
                  1,0,15,15,15,15,15,15,15,8,1,
                  1,1,0,15,15,8,0,0,0,0,1,
                  1,1,1,0,15,8,1,1,1,1,1,
                  1,1,1,1,0,8,1,1,1,1,1,
                  1,1,1,1,1,0,1,1,1,1,1);

const RightButt : array[0..120] of byte = (

                 1,1,1,1,1,8,1,1,1,1,1,
                 1,1,1,1,1,8,8,1,1,1,1,
                 1,1,1,1,1,8,15,8,1,1,1,
                 1,0,8,8,8,8,15,15,8,1,1,
                 1,0,15,15,15,15,15,15,15,8,1,
                 1,0,15,15,15,15,15,15,15,15,8,
                 1,0,15,15,15,15,15,15,15,8,1,
                 1,0,0,0,0,0,15,15,8,1,1,
                 1,1,1,1,1,0,15,8,1,1,1,
                 1,1,1,1,1,0,8,1,1,1,1,
                 1,1,1,1,1,0,1,1,1,1,1);




const  Zap_ON : array[0..665] of byte = (
      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
      0,0,0,0,0,0,0,0,0,0,0,15,0,8,8,8,8,8,8,8,8,8,8,8,8,
      8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,15,0,
      8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,15,15,15,15,15,15,15,15,
      15,15,15,15,15,15,15,15,15,8,15,0,8,15,8,7,7,7,8,7,7,7,8,7,7,
      7,8,8,0,15,15,7,7,7,8,7,7,7,8,7,7,7,8,7,7,7,8,15,0,8,
      15,8,7,7,7,0,0,0,0,0,7,7,7,8,8,0,15,15,7,7,7,8,7,7,7,
      8,7,7,7,8,7,7,7,8,15,0,8,15,7,8,7,0,2,2,2,2,2,0,7,7,
      7,8,0,15,15,8,7,7,7,8,7,7,7,8,7,7,7,8,7,7,8,15,0,8,15,
      7,7,0,2,2,15,10,15,2,2,0,7,7,8,0,15,15,7,0,0,0,0,0,0,0,
      0,0,0,0,0,0,7,8,15,0,8,15,7,0,0,2,15,10,15,10,15,2,2,0,7,
      8,0,15,15,7,0,15,15,15,15,15,15,15,15,15,15,8,0,8,8,15,0,8,15,7,
      0,2,15,15,15,10,15,10,15,2,0,7,8,0,15,15,7,0,15,7,7,7,7,7,7,
      7,7,7,8,0,8,8,15,0,8,15,7,0,2,2,15,10,15,10,15,10,2,0,7,8,
      0,15,15,7,0,15,7,7,7,7,7,7,7,7,7,8,0,7,8,15,0,8,15,7,0,
      2,2,10,15,10,15,10,2,10,0,7,8,0,15,15,8,0,15,7,7,7,7,7,7,7,
      7,7,8,0,7,8,15,0,8,15,8,0,0,10,2,10,2,10,2,10,0,0,8,8,0,
      15,15,7,0,8,8,8,8,8,8,8,8,8,8,8,0,7,8,15,0,8,15,8,7,0,
      0,10,2,10,2,10,0,0,7,8,8,0,15,15,7,0,0,0,0,0,0,0,0,0,0,
      0,0,0,7,8,15,0,8,15,7,8,7,0,0,2,0,2,0,0,7,7,7,8,0,15,
      15,8,7,7,7,8,7,7,7,8,7,7,7,8,7,7,8,15,0,8,15,7,7,8,7,
      0,0,0,0,0,7,8,7,7,8,0,15,15,7,8,7,7,7,8,7,7,7,8,7,7,
      7,8,7,8,15,0,8,15,7,7,7,8,7,7,7,8,7,7,7,8,7,8,0,15,15,
      7,7,8,7,7,7,8,7,7,7,8,7,7,7,8,8,15,0,8,8,8,8,8,8,8,
      8,8,8,8,8,8,8,8,8,0,15,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
      8,8,8,15,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,
      15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15);

Zap_OFF : array[0..665] of byte = (
      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
      0,0,0,0,0,0,0,0,0,0,0,15,0,8,8,8,8,8,8,8,8,8,8,8,8,
      8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,15,0,
      8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,15,15,15,15,15,15,15,15,
      15,15,15,15,15,15,15,15,15,8,15,0,8,15,8,7,7,7,8,7,7,7,8,7,7,
      7,8,8,0,15,15,7,7,7,8,7,7,7,8,7,7,7,8,7,7,7,8,15,0,8,
      15,8,7,7,7,0,0,0,0,0,7,7,7,8,8,0,15,15,7,7,7,8,7,7,7,
      8,7,7,7,8,7,7,7,8,15,0,8,15,7,8,7,0,8,8,8,8,8,0,7,7,
      7,8,0,15,15,8,7,7,7,8,7,7,7,8,7,7,7,8,7,7,8,15,0,8,15,
      7,7,0,8,8,15,7,15,8,8,0,7,7,8,0,15,15,7,0,0,0,0,0,0,0,
      0,0,0,0,0,0,7,8,15,0,8,15,7,0,0,8,15,7,15,7,15,8,8,0,7,
      8,0,15,15,7,0,15,15,15,15,15,15,15,15,15,15,8,0,8,8,15,0,8,15,7,
      0,8,15,15,15,7,15,7,15,8,0,7,8,0,15,15,7,0,15,7,7,7,7,7,7,
      7,7,7,8,0,8,8,15,0,8,15,7,0,8,8,15,7,15,7,15,7,8,0,7,8,
      0,15,15,7,0,15,7,7,7,7,7,7,7,7,7,8,0,7,8,15,0,8,15,7,0,
      8,8,7,15,7,15,7,8,7,0,7,8,0,15,15,8,0,15,7,7,7,7,7,7,7,
      7,7,8,0,7,8,15,0,8,15,8,0,0,7,8,7,8,7,8,7,0,0,8,8,0,
      15,15,7,0,8,8,8,8,8,8,8,8,8,8,8,0,7,8,15,0,8,15,8,7,0,
      0,7,8,7,8,7,0,0,7,8,8,0,15,15,7,0,0,0,0,0,0,0,0,0,0,
      0,0,0,7,8,15,0,8,15,7,8,7,0,0,8,0,8,0,0,7,7,7,8,0,15,
      15,8,7,7,7,8,7,7,7,8,7,7,7,8,7,7,8,15,0,8,15,7,7,8,7,
      0,0,0,0,0,7,8,7,7,8,0,15,15,7,8,7,7,7,8,7,7,7,8,7,7,
      7,8,7,8,15,0,8,15,7,7,7,8,7,7,7,8,7,7,7,8,7,8,0,15,15,
      7,7,8,7,7,7,8,7,7,7,8,7,7,7,8,8,15,0,8,8,8,8,8,8,8,
      8,8,8,8,8,8,8,8,8,0,15,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
      8,8,8,15,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,
      15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15);

GPotenciometer : array[0..1599] of byte =(
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,4,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,4,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
      1,4,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,8,8,8,8,8,8,8,8,0,0,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,0,0,8,8,15,15,15,7,
      15,7,15,7,8,8,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,
      1,0,8,8,15,15,7,7,7,7,7,7,7,7,7,7,8,8,0,1,1,1,1,4,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,0,8,15,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,0,
      1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,8,15,7,7,7,7,7,7,7,7,
      7,7,7,7,7,7,7,7,7,8,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
      8,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,0,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,0,8,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
      8,0,1,1,1,1,1,1,1,1,1,1,1,1,4,4,1,1,0,8,15,7,7,7,7,7,7,7,7,7,
      7,7,7,7,7,7,7,7,7,7,8,0,1,1,4,4,1,1,1,1,1,1,1,1,1,1,1,0,8,15,
      7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,0,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,0,8,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
      7,8,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,8,15,7,7,7,7,7,7,7,7,7,7,
      7,7,7,7,7,7,7,7,7,7,7,8,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,8,15,
      7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,0,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,0,8,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
      7,8,0,1,1,1,1,1,1,1,1,1,1,4,4,1,1,0,8,15,7,7,7,7,7,7,7,7,7,7,
      7,7,7,7,7,7,7,7,7,7,7,8,0,1,1,4,4,4,1,1,1,1,1,1,1,1,1,0,8,15,
      7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,0,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,0,8,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
      7,8,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,8,15,7,7,7,7,7,7,7,7,7,
      7,7,7,7,7,7,7,7,7,7,8,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,8,
      15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,0,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,0,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,
      0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,0,8,15,7,7,7,7,7,7,7,7,
      7,7,7,7,7,7,7,7,7,8,0,1,1,4,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,
      0,8,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,0,1,1,1,1,4,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,1,0,8,8,7,7,7,7,7,7,7,7,7,7,7,7,8,8,0,1,
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,8,8,7,7,7,7,
      7,7,7,7,8,8,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,0,0,0,8,8,8,8,8,8,8,0,0,1,1,1,4,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,
      4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,4,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,4,4,1,1,4,4,4,4,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,
      1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,
      1,0,1,0,1,0,1,1,4,1,1,4,1,1,0,1,0,1,0,0,0,1,0,1,0,1,1,1,1,1,
      1,1,1,1,1,1,1,0,0,0,1,0,1,0,1,0,1,1,4,1,1,4,1,1,0,0,0,1,0,1,
      0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,4,1,
      1,4,1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
      1,1,1,1,1,1,1,1,1,1);

GPrepinac : array[0..77] of byte =(
      0,0,0,0,0,0,0,15,15,15,15,0,0,15,7,7,8,0,0,15,7,7,8,0,0,15,0,0,8,0,
      0,15,15,15,8,0,0,15,0,0,8,0,0,15,15,15,8,0,0,15,0,0,8,0,0,15,7,7,8,0,
      0,15,7,7,8,0,0,15,8,8,8,0,0,0,0,0,0,0);

const GBezec : array [1..247] of byte =(
              8,8,8,8,8,8,8,8,8,8,8,8,8,
              8,8,0,0,0,0,0,0,0,0,0,0,8,
              8,0,0,8,0,0,0,8,0,0,0,8,8,
              8,8,0,0,8,8,0,0,8,8,0,0,8,
              1,8,8,8,8,0,8,8,0,0,8,8,1,
              1,8,8,8,8,8,8,8,8,8,8,8,1,
              1,8,8,8,7,7,8,8,7,7,8,8,1,
              1,1,8,7,8,8,7,7,8,8,8,1,1,
              1,1,8,7,7,7,7,8,7,7,8,1,1,
              1,1,8,15,15,15,15,15,15,15,8,1,1,
              1,1,8,8,7,7,7,8,7,7,8,1,1,
              1,1,8,7,8,8,7,7,8,8,8,1,1,
              1,8,8,8,8,7,8,8,8,7,8,8,1,
              1,8,8,8,8,8,8,8,8,8,8,8,1,
              1,8,8,0,8,8,8,0,8,8,8,8,1,
              8,0,8,8,0,0,8,8,8,0,8,8,8,
              8,8,0,0,8,8,0,0,0,8,0,0,8,
              8,0,0,8,0,0,0,8,0,0,0,8,8,
              8,8,8,8,8,8,8,8,8,8,8,8,8);

procedure PutBitmap(X,Y,mX,mY : integer; nF:byte; poleP : pointer);

implementation

procedure PutBitmap(X,Y,mX,mY : integer; nF:byte; poleP : Pointer);
          var a,b : integer;
              counter : word;
              pole : Pobrazok;
          begin
               pole := poleP;
               counter := 0;
               for b:=Y to  Y+mY do begin
                   for a:=X to  X+mX do  begin
                       if pole^[counter] <> nF then
                          PutPixel(a,b,pole^[counter]);
                       counter := counter + 1;
                   end;
               end;
          end;

end.